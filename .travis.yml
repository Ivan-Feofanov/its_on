dist: bionic
language: python
python:
  - "3.8"

stages:
  - lint
  - test
  - name: dev_build
    if: branch = master
  - name: stable_build
    if: (tag IS present) AND (tag =~ ^v)

env:
  global:
    - DOCKER_IMAGE_NAME: bestdoctor/its_on
    - DEV_IMAGE: $DOCKER_IMAGE_NAME:dev-$TRAVIS_COMMIT
    - LATEST_DEV_IMAGE: $DOCKER_IMAGE_NAME:dev-latest
    - STABLE_IMAGE: $DOCKER_IMAGE_NAME:$TRAVIS_TAG
    - LATEST_IMAGE: $DOCKER_IMAGE_NAME:latest

jobs:
  include:
    - stage: lint
      env:
        - HADOLINT: "${HOME}/hadolint"
      install:
        - gem install mdl
        - curl -sL -o ${HADOLINT} "https://github.com/hadolint/hadolint/releases/download/v1.17.6/hadolint-$(uname -s)-$(uname -m)"
        - chmod 700 ${HADOLINT}
      script:
        - mdl README.md
        - git ls-files --exclude='Dockerfile*' --ignored | xargs --max-lines=1 ${HADOLINT}

    - stage: test
      env:
        - DYNACONF_DATABASE__dsn: "postgresql://postgres@localhost:5432/tests"
        - DYNACONF_DATABASE__superuser_dsn: "postgresql://postgres@localhost:5432/postgres"
      addons:
        postgresql: "9.6"
        apt:
          packages:
            - postgresql-9.6
      services:
        - postgresql
        - redis
      install:
        - pip install -r requirements.txt
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
      before_script:
        - ./cc-test-reporter before-build
      script:
        - make check
      after_script:
        - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT

    - stage: dev_build
      services:
        - docker
      before_script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      script:
        - docker build -t $DEV_IMAGE -t $LATEST_DEV_IMAGE .
        - docker push $DEV_IMAGE
        - docker push $LATEST_DEV_IMAGE

    - stage: stable_build
      services:
        - docker
      before_script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      script:
        - docker build -t $STABLE_IMAGE -t $LATEST_IMAGE .
        - docker push $STABLE_IMAGE
        - docker push $LATEST_IMAGE
